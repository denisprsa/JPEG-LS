using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace JPEG
{
    public static class TestEncoding
    {
        public static byte[] Input1()
        {
            return new byte[16]{
                0,  0,  90, 74,
                68, 50, 43, 205,
                64, 145,145,145,
                100,145,145,145
            };
        }
        public static string[] Result1()
        {
            return new string[13]
            {
                "1100000000000000000000000110110010",
                "00000000100",
                "0001000111",
                "00000000111",
                "00000000000000000000000101011101",
                "00000000000000000000000110111011",
                "100110",
                "00000000000000000000000110111100",
                "000110",
                "00000000000000000000000101110110",
                "000000000000000000100",
                "100010",
                "11"
            };
        }


        public static byte[] Input2()
        {
            return new byte[16]{
                0,       1,       2   ,    3,
                4   ,    5   ,    6  ,     7,
                8,       9,       10,      11,
                12    ,  13     , 14   ,   15
            };
        }
        public static string[] Result2()
        {
            return new string[15]
            {
                "10101",
                "101",
                "101",
                "00100",
                "110",
                "100",
                "110",
                "00100",
                "10",
                "10",
                "100",
                "0110",
                "1",
                "1",
                "10"
            };
        }


        public static byte[] Input3()
        {
            return new byte[16] {
                0,  0,  1,  0,
                0,  1,  1,  0,
                0,  1,  1,  0,
                1,  1,  0,  1
            };
        }
        public static string[] Result3()
        {
            return new string[13]
            {
                "110101",
                "110",
                "10101",
                "100",
                "100",
                "100",
                "10",
                "10",
                "10",
                "010",
                "100",
                "10",
                "11"
            };
        }

        public static byte[] Input4()
        {
            return new byte[16]{
                0,0,90,74,
                68,50,43,205,
                64,145,145,145,
                100,145,145,145
            };
        }
        public static string[] Result4()
        {
            return new string[16]
            {
                "0101",
                "100",
                "010",
                "1",
                "100",
                "110",
                "10",
                "1",
                "100",
                "11",
                "10",
                "0101",
                "110",
                "100",
                "10",
                "10"
            };
        }

        public static byte[] Input5()
        {
            return new byte[16]{
                1  ,     1  ,     0 ,      0,
                1    ,   0     ,  0    ,   0,
                0    ,   1    ,   0  ,     1,
                1   ,    0 ,      1    ,   1
            };
        }
        public static string[] Result5()
        {
            return new string[16]
            {
                "0101",
                "100",
                "010",
                "1",
                "100",
                "110",
                "10",
                "1",
                "100",
                "11",
                "10",
                "0101",
                "110",
                "100",
                "10",
                "10"
            };
        }

        public static byte[] Input6()
        {
            return new byte[16]{
                0,0,90,74,
                68,50,43,205,
                64,145,145,145,
                100,145,145,145
            };
        }
        public static string[] Result6()
        {
            return new string[13]
            {
                "1100000000000000000000000110110010",
                "00000000100",
                "0001000111",
                "00000000111",
                "00000000000000000000000101011101",
                "00000000000000000000000110111011",
                "100110",
                "00000000000000000000000110111100",
                "000110",
                "00000000000000000000000101110110",
                "000000000000000000100",
                "100010",
                "11"
            };
        }

        public static byte[] Input7()
        {
            return new byte[16]{
                0,0,90,74,
                68,50,43,205,
                64,145,145,145,
                100,145,145,145
            };
        }
        public static string[] Result7()
        {
            return new string[13]
            {
                "1100000000000000000000000110110010",
                "00000000100",
                "0001000111",
                "00000000111",
                "00000000000000000000000101011101",
                "00000000000000000000000110111011",
                "100110",
                "00000000000000000000000110111100",
                "000110",
                "00000000000000000000000101110110",
                "000000000000000000100",
                "100010",
                "11"
            };
        }

        public static byte[] Input8()
        {
            return new byte[16]{
                1 ,      1     ,  0     ,  0,
                1  ,     1    ,   1   ,    0,
                1  ,     1   ,    1   ,    1,
                1   ,    1   ,    1   ,    1
            };
        }
        public static string[] Result8()
        {
            return new string[10]
            {
                "0101",
                "100",
                "010",
                "1",
                "100",
                "100",
                "101",
                "10",
                "1111",
                "11"
            };
        }

        public static byte[] Input9()
        {
            return new byte[16]{
                0,0,90,74,
                68,50,43,205,
                64,145,145,145,
                100,145,145,145
            };
        }
        public static string[] Result9()
        {
            return new string[13]
            {
                "1100000000000000000000000110110010",
                "00000000100",
                "0001000111",
                "00000000111",
                "00000000000000000000000101011101",
                "00000000000000000000000110111011",
                "100110",
                "00000000000000000000000110111100",
                "000110",
                "00000000000000000000000101110110",
                "000000000000000000100",
                "100010",
                "11"
            };
        }


        public static byte[] Input10()
        {
            return new byte[16]{
                66 ,     126   ,  235   ,  185,
                63   ,   226   ,  180    , 120,
                214 ,    44  ,    38  ,    253,
                241   ,  74   ,   88  ,    155
            };
        }
        public static string[] Result10()
        {
            return new string[16]
            {
                "00000000000000000000000110000010",
                "00000000000000000000000101110110",
                "000000110111",
                "01101000",
                "0101",
                "00000000000000000000000111001101",
                "00000000000000000000000101101101",
                "00000000000000000000000101110111",
                "00000000000000000000000111010000",
                "0000110101",
                "000110",
                "00110000",
                "1110101",
                "0101",
                "0000000000100",
                "0001000111"
            };
        }


        public static byte[] Input11()
        {
            return new byte[16]{
                0,0,90,74,
                68,50,43,205,
                64,145,145,145,
                100,145,145,145
            };
        }
        public static string[] Result11()
        {
            return new string[13]
            {
                "1100000000000000000000000110110010",
                "00000000100",
                "0001000111",
                "00000000111",
                "00000000000000000000000101011101",
                "00000000000000000000000110111011",
                "100110",
                "00000000000000000000000110111100",
                "000110",
                "00000000000000000000000101110110",
                "000000000000000000100",
                "100010",
                "11"
            };
        }


        public static byte[] Input12()
        {
            return new byte[16]{
                0,0,90,74,
                68,50,43,205,
                64,145,145,145,
                100,145,145,145
            };
        }
        public static string[] Result12()
        {
            return new string[13]
            {
                "1100000000000000000000000110110010",
                "00000000100",
                "0001000111",
                "00000000111",
                "00000000000000000000000101011101",
                "00000000000000000000000110111011",
                "100110",
                "00000000000000000000000110111100",
                "000110",
                "00000000000000000000000101110110",
                "000000000000000000100",
                "100010",
                "11"
            };
        }


        public static byte[] Input13()
        {
            return new byte[16]{
                0,0,90,74,
                68,50,43,205,
                64,145,145,145,
                100,145,145,145
            };
        }
        public static string[] Result13()
        {
            return new string[13]
            {
                "1100000000000000000000000110110010",
                "00000000100",
                "0001000111",
                "00000000111",
                "00000000000000000000000101011101",
                "00000000000000000000000110111011",
                "100110",
                "00000000000000000000000110111100",
                "000110",
                "00000000000000000000000101110110",
                "000000000000000000100",
                "100010",
                "11"
            };
        }


        public static byte[] Input14()
        {
            return new byte[16]{
                0,0,90,74,
                68,50,43,205,
                64,145,145,145,
                100,145,145,145
            };
        }
        public static string[] Result14()
        {
            return new string[13]
            {
                "1100000000000000000000000110110010",
                "00000000100",
                "0001000111",
                "00000000111",
                "00000000000000000000000101011101",
                "00000000000000000000000110111011",
                "100110",
                "00000000000000000000000110111100",
                "000110",
                "00000000000000000000000101110110",
                "000000000000000000100",
                "100010",
                "11"
            };
        }


        public static byte[] Input15()
        {
            return new byte[16]{
                0,0,90,74,
                68,50,43,205,
                64,145,145,145,
                100,145,145,145
            };
        }
        public static string[] Result15()
        {
            return new string[13]
            {
                "1100000000000000000000000110110010",
                "00000000100",
                "0001000111",
                "00000000111",
                "00000000000000000000000101011101",
                "00000000000000000000000110111011",
                "100110",
                "00000000000000000000000110111100",
                "000110",
                "00000000000000000000000101110110",
                "000000000000000000100",
                "100010",
                "11"
            };
        }



    }
}
